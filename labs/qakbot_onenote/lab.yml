name: Malicious Scripts Embedded in OneNote Files
description: Find Qakbot malware hiding in Microsoft OneNote files
details: |
  # QakBot HTML Smuggling

  ## Focus Areas
  - Attachment Content

  ---
  
  ## Brief

  In early 2023, several malware families, including Qakbot, focused heavily on script files embedded within Microsoft OneNote .one files. Due in part to the lack of Mark-of-the-Web applied to these embedded files (until this was patched by Microsoft!).

  Office 365 lures, amongst others like Adobe, are used to encourage users to launch the scripts. These scripts would then typically download and launch remotely-hosted DLLs to complete infection.

  --- 

  ## Requirements

  None
  
queries:
  full: |
    type.inbound
    and any(attachments,
      any(file.explode(.),
        // Limit our match to .one files
        .file_extension == "one" and 

        // Expected YARA rule fires for repeated references
        any(.scan.yara.matches,
                .name == "SUSP_OneNote_Repeated_FileDataReference_Feb23"
            )	
      )
    )
  alternate: |
    type.inbound 
    and any(attachments, 
      (
        .file_extension in ("one", "onepkg") or 
        .file_extension in $file_extensions_common_archives
      ) and
      any(beta.binexplode(.), any(.flavors.yara, . == "onenote_file")) and 
      any(beta.binexplode(.), 
        (
          any(.scan.strings.strings, strings.ilike(., 
            "*RegWrite*",
            "*RegRead*",
            "*rundll32*",
            "*<job id=*", //wsf
            "*powershell.exe*",
            "*#@~^*", // Microsoft Script Encoding File Header, jse, vbe
            '*C:\Users\Public*',
            "*69 6e 76 6f 6b 65 2d 77 65 62 72 65 71 75 65 73 74*", // invoke-webrequest
            "*system.net.webclient*",
            "*WScript.Shell*",
            '*HKCU\SOFTWARE*',
            "*https://www.instructables.com/How-to-Make-a-message-box-using-VBScript/*",
            "*This document is corrupted and could not be opened*"
          )) or 
          strings.ilike(.scan.ocr.raw, 
            "*This document contains attachments from the cloud*", // Adobe/365 branding
            "*Double-Click The \"Open Protected View\" button to securely view document contents*", //O365 branding
            "*Microsoft 365* is the new name for Microsoft's Office 365 subscription service*" //O365 branding
          )
        )
      )
    )
    and (
      (
        sender.email.domain.root_domain in $free_email_providers
        and sender.email.email not in $recipient_emails
      )
      or (
        sender.email.domain.root_domain not in $free_email_providers
        and sender.email.domain.domain not in $recipient_domains
      )
    )



